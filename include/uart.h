#ifndef CC2538_UART_H_
#define CC2538_UART_H_


#include "cc2538-reg.h"



typedef struct
{
	uint32_t dr;								// 0x000
	#define UART_DR_OE_OVERRUNCONDITION			(0x1 << 11)
	#define UART_DR_BE_BREAKCONDITION			(0x1 << 10)
	#define UART_DR_PE_PARITYERRORCONDITION		(0x1 << 9)
	#define UART_DR_FE_FRAMEERRORCONDITION		(0x1 << 8)
	#define UART_DR_DATA_MASK					(0xFF)
	uint32_t rsr_ecr;							// 0x004
	#define UART_RSR_OE_OVERRUNCONDITION		(0x1 << 3)
	#define UART_RSR_BE_BREAKCONDITION			(0x1 << 2)
	#define UART_RSR_PE_PARITYERRORCONDITION	(0x1 << 1)
	#define UART_RSR_FE_FRAMEERRORCONDITION		(0x1 << 0)
	#define UART_ECR_DATA_MASK					(0xFF)
	uint32_t reserved0[4];
	uint32_t fr;								// 0x018
	#define UART_FR_TXFE_FIFOORTXREGEMPTY		(0x1 << 7)
	#define UART_FR_RXFF_FIFOORRXREGFULL 		(0x1 << 6)
	#define UART_FR_TXFF_FIFOORTXREGFULL		(0x1 << 5)
	#define UART_FR_RXFE_FIFOORRXREGEMPTY		(0x1 << 4)
	#define UART_FR_BUSY_UARTBUSY				(0x1 << 3)
	#define UART_FR_CTS_UART1CLEARTOSEND 		(0x1)
	uint32_t reserved1[1];
	uint32_t ilpr;								// 0x020
	uint32_t ibrd;								// 0x024
	uint32_t fbrd;								// 0x028
	uint32_t lcrh;								// 0x02C
	#define UART_LCRH_SPS_STICKPARITYENABLE		(0x1 << 7)
	#define UART_LCRH_WLEN_5BITS				(0x0 << 5)
	#define UART_LCRH_WLEN_6BITS				(0x1 << 5)
	#define UART_LCRH_WLEN_7BITS				(0x2 << 5)
	#define UART_LCRH_WLEN_8BITS				(0x3 << 5)
	#define UART_LCRH_FEN_ENABLEFIFOS			(0x1 << 4)
	#define UART_LCRH_FEN_DISABLEFIFOS			(0x0)
	#define UART_LCRH_STP2_2STOPBITATFRAMEEND	(0x1 << 3)
	#define UART_LCRH_STP2_1STOPBITATFRAMEEND	(0x0)
	#define UART_LCRH_EPS_EVENPARITYCHECKING 	(0x1 << 2)
	#define UART_LCRH_EPS_ODDPARITYCHECKING 	(0x0)
	#define UART_LCRH_PEN_PARITYCHECKING 		(0x1 << 1)
	#define UART_LCRH_PEN_PARITYDISABLED 		(0x0)
	#define UART_LCRH_BRK_LOWSIGNALONFRAMEEND	(0x1)
	uint32_t ctl;								// 0x030
	#define UART_CTL_CTSEN_ENABLEFRCTSFLOW		(0x1 << 15)
	#define UART_CTL_RTSEN_ENABLEU1RTSFLOW		(0x1 << 14)
	#define UART_CTL_RXE_UARTRXENABLE			(0x1 << 9)
	#define UART_CTL_TXE_UARTTXENABLE			(0x1 << 8)
	#define UART_CTL_LBE_LOOPBACKENABLE			(0x1 << 7)
	#define UART_CTL_LIN_LINMODEENABLE			(0x1 << 6)
	#define UART_CTL_HSE_CLOCKDIVBY8			(0x1 << 5)
	#define UART_CTL_HSE_CLOCKDIVBY16			(0x0)
	#define UART_CTL_EOT_INTONTRANSFERCOMPLETE	(0x1 << 4)
	#define UART_CTL_EOT_INTDEPENDONUARTIFLS 	(0x0)
	#define UART_CTL_SIRLP_IRDAFORLOWPOWER		(0x1 << 2)
	#define UART_CTL_SIREN_USESIRFORIRDA		(0x1 << 1)
	#define UART_CTL_UARTEN_UARTENABLE			(0x1)		
	uint32_t ifls;								// 0x034
	#define UART_IFLS_RXIFLSEL_FIFOAT_1_8		(0x0)
	#define UART_IFLS_RXIFLSEL_FIFOAT_1_4		(0x1 << 3)
	#define UART_IFLS_RXIFLSEL_FIFOAT_1_2		(0x2 << 3)
	#define UART_IFLS_RXIFLSEL_FIFOAT_3_4		(0x3 << 3)
	#define UART_IFLS_RXIFLSEL_FIFOAT_7_8		(0x4 << 3)
	#define UART_IFLS_TXIFLSEL_FIFOAT_7_8		(0x0)
	#define UART_IFLS_TXIFLSEL_FIFOAT_3_4		(0x1)
	#define UART_IFLS_TXIFLSEL_FIFOAT_1_2		(0x2)
	#define UART_IFLS_TXIFLSEL_FIFOAT_1_4		(0x3)
	#define UART_IFLS_TXIFLSEL_FIFOAT_1_8		(0x4)
	uint32_t im;								// 0x038
	#define UART_IM_LME5IM_INTERRUPTENABLE		(0x1 << 15)
	#define UART_IM_LME1IM_INTERRUPTENABLE 		(0x1 << 14)
	#define UART_IM_LMSBIM_INTERRUPTENABLE		(0x1 << 13)
	#define UART_IM_NINEBITIM_INTERRUPTENABLE	(0x1 << 12)
	#define UART_IM_OEIM_OVERRUNINTENABLE		(0x1 << 10)
	#define UART_IM_BEIM_BREAKINTENABLE			(0x1 << 9)
	#define UART_IM_PEIM_PARITYERRINTENABLE		(0x1 << 8)
	#define UART_IM_FEIM_FRAMINGERRINTENABLE	(0x1 << 7)
	#define UART_IM_RTIM_TIMEOUTINTENABLE		(0x1 << 6)
	#define UART_IM_TXIM_TRANSMITINTENABLE		(0x1 << 5)
	#define UART_IM_RXIM_RECEIVEINTENABLE 		(0x1 << 4)
	uint32_t ris;								// 0x03C
	#define UART_RIS_LME5RIS_LINSYNC5FALLEDGE	(0x1 << 15)
	#define UART_RIS_LME1RIS_LINSYNC1FALLEDGE	(0x1 << 14)
	#define UART_RIS_LMSBRIS_LINSYNCBREAK		(0x1 << 13)
	#define UART_RIS_NINEBITRIS_RXADRESSMATCH	(0x1 << 12)
	#define UART_RIS_OERIS_OVERRUNINTERRUPT		(0x1 << 10)
	#define UART_RIS_BERIS_BREAKINTERRUPT		(0x1 << 9)
	#define UART_RIS_PERIS_PARITYERRINTERRUPT	(0x1 << 8)
	#define UART_RIS_FERIS_FRAMINGERRINTERRUPT	(0x1 << 7)
	#define UART_RIS_RTRIS_TIMEOUTINTERRUPT		(0x1 << 6)
	#define UART_RIS_TXRIS_TRANSMITINTERRUPT 	(0x1 << 5)
	#define UART_RIS_RXRIS_RECEIVEINTERRUPT		(0x1 << 4)
	uint32_t mis;								// 0x040
	#define UART_MIS_LME5MIS_LINSYNC5FALLEDGE	(0x1 << 15)
	#define UART_MIS_LME1MIS_LINSYNC1FALLEDGE	(0x1 << 14)
	#define UART_MIS_LMSBMIS_LINSYNCBREAK		(0x1 << 13)
	#define UART_MIS_NINEBITMIS_RXADRESSMATCH	(0x1 << 12)
	#define UART_MIS_OEMIS_OVERRUNINTERRUPT		(0x1 << 10)
	#define UART_MIS_BEMIS_BREAKINTERRUPT		(0x1 << 9)
	#define UART_MIS_PEMIS_PARITYERRINTERRUPT	(0x1 << 8)
	#define UART_MIS_FEMIS_FRAMINGERRINTERRUPT	(0x1 << 7)
	#define UART_MIS_RTMIS_TIMEOUTINTERRUPT		(0x1 << 6)
	#define UART_MIS_TXMIS_TRANSMITINTERRUPT 	(0x1 << 5)
	#define UART_MIS_RXMIS_RECEIVEINTERRUPT		(0x1 << 4)
	uint32_t icr;								// 0x044
	#define UART_ICR_LME5IC_LINSYNC5FALLEDGE	(0x1 << 15)
	#define UART_ICR_LME1IC_LINSYNC1FALLEDGE	(0x1 << 14)
	#define UART_ICR_LMSBIC_LINSYNCBREAK		(0x1 << 13)
	#define UART_ICR_NINEBITIC_RXADRESSMATCH	(0x1 << 12)
	#define UART_ICR_OEIC_OVERRUNINTERRUPT		(0x1 << 10)
	#define UART_ICR_BEIC_BREAKINTERRUPT		(0x1 << 9)
	#define UART_ICR_PEIC_PARITYERRINTERRUPT	(0x1 << 8)
	#define UART_ICR_FEIC_FRAMINGERRINTERRUPT	(0x1 << 7)
	#define UART_ICR_RTIC_TIMEOUTINTERRUPT		(0x1 << 6)
	#define UART_ICR_TXIC_TRANSMITINTERRUPT 	(0x1 << 5)
	#define UART_ICR_RXIC_RECEIVEINTERRUPT		(0x1 << 4)
	uint32_t dmactl;							// 0x048
	#define UART_DMACTL_UDMADISABLEDONRXERR		(0x1 << 2)
	#define UART_DMACTL_TXFIFODMAENABLE			(0x1 << 1)
	#define UART_DMACTL_RXFIFODMAENABLE			(0x1)
	uint32_t reserved2[17];
	uint32_t lctl;								// 0x090
	#define UART_LCTL_BLEN_SYNCBRKAT16TBIT		(0x3 << 4)
	#define UART_LCTL_BLEN_SYNCBRKAT15TBIT		(0x2 << 4)
	#define UART_LCTL_BLEN_SYNCBRKAT14TBIT		(0x1 << 4)
	#define UART_LCTL_BLEN_SYNCBRKAT13TBIT		(0x0)
	#define UART_LCTL_MASTER_UARTASLINMASTER	(0x1)
	#define UART_LCTL_MASTER_UARTASLINSLAVE		(0x0)
	uint32_t lss;								// 0x094
	uint32_t ltim;								// 0x098
	uint32_t reserved3[2];
	uint32_t ninebitaddr;						// 0x0A4
	#define UART_NINEBITADDR_NINEBITEN_9BITNODEENABLE		(0x1 << 15)
	#define UART_NINEBITADDR_ADDR_SETADDRESS(ADDRESS)		(ADDRESS & 0xFF)
	uint32_t ninebitmask;						// 0x0A8
	#define UART_NINEBITAMASK_RANGE_GETRANGE_MASK			(0xFF << 8)
	#define UART_NINEBITAMASK_MASK_MASKADDRESSRANGE(MASK)	(MASK & 0xFF)
	uint32_t reserved4[965];
	uint32_t pp;								// 0xFC0
	#define UART_PP_NB_UARTPROVIDE9BITSUPPORT	(0x1 << 1)
	uint32_t reserved5[1];
	uint32_t cc;								// 0xFC8
	#define UART_CC_CS_PIOSC_BAUDBYSYSDIV			(0x0)
	#define UART_CC_CS_PIOSC_BAUDBYIODIV			(0x1)
	#define UART_CC_CS_DSEN_SYSCLOCKBYSYSDIV 		(0x0)
	#define UART_CC_CS_DSEN_SYSCLOCKBYPIOSC			(0x1 << 2)
} uart_t;


#define UART0 									((volatile uart_t *)UART0_BASE)
#define UART1 									((volatile uart_t *)UART1_BASE)


#endif